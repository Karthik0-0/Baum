{"ast":null,"code":"var _jsxFileName = \"/Users/dineshkorukonda/Developer/Dev/DevelopmentStage/Baum/app/src/Components/number/number.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './number.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Number = ({\n  targetPlants,\n  targetTrees,\n  targetEvents,\n  targetVillages\n}) => {\n  _s();\n  const [plants, setPlants] = useState(0);\n  const [trees, setTrees] = useState(0);\n  const [events, setEvents] = useState(0);\n  const [villages, setVillages] = useState(0);\n  const [hasStarted, setHasStarted] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    const handleScroll = entries => {\n      const [entry] = entries;\n      if (entry.isIntersecting) {\n        setHasStarted(true);\n      }\n    };\n    const observer = new IntersectionObserver(handleScroll, {\n      threshold: 0.1\n    });\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!hasStarted) return;\n    const plantInterval = setInterval(() => {\n      setPlants(prev => {\n        if (prev >= targetPlants) {\n          clearInterval(plantInterval);\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 50);\n    const treeInterval = setInterval(() => {\n      setTrees(prev => {\n        if (prev >= targetTrees) {\n          clearInterval(treeInterval);\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 50);\n    const eventInterval = setInterval(() => {\n      setEvents(prev => {\n        if (prev >= targetEvents) {\n          clearInterval(eventInterval);\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 50);\n    const villageInterval = setInterval(() => {\n      setVillages(prev => {\n        if (prev >= targetVillages) {\n          clearInterval(villageInterval);\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 50);\n    return () => {\n      clearInterval(plantInterval);\n      clearInterval(treeInterval);\n      clearInterval(eventInterval);\n      clearInterval(villageInterval);\n    };\n  }, [hasStarted, targetPlants, targetTrees, targetEvents, targetVillages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"number-container\",\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-container-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Our Numbers speak for themselves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-container-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Number of Plants Planted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: plants\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-container-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Number of Trees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: trees\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Number of Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: events\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Number of Villages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: villages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Number, \"MAIaPYMj+F5qi8QE7xercho0cU0=\");\n_c = Number;\nexport default Number;\nvar _c;\n$RefreshReg$(_c, \"Number\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Number","targetPlants","targetTrees","targetEvents","targetVillages","_s","plants","setPlants","trees","setTrees","events","setEvents","villages","setVillages","hasStarted","setHasStarted","ref","handleScroll","entries","entry","isIntersecting","observer","IntersectionObserver","threshold","current","observe","unobserve","plantInterval","setInterval","prev","clearInterval","treeInterval","eventInterval","villageInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dineshkorukonda/Developer/Dev/DevelopmentStage/Baum/app/src/Components/number/number.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './number.css';\n\nconst Number = ({ targetPlants, targetTrees, targetEvents, targetVillages }) => {\n    const [plants, setPlants] = useState(0);\n    const [trees, setTrees] = useState(0);\n    const [events, setEvents] = useState(0);\n    const [villages, setVillages] = useState(0);\n    const [hasStarted, setHasStarted] = useState(false);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const handleScroll = (entries) => {\n            const [entry] = entries;\n            if (entry.isIntersecting) {\n                setHasStarted(true);\n            }\n        };\n\n        const observer = new IntersectionObserver(handleScroll, {\n            threshold: 0.1\n        });\n\n        if (ref.current) {\n            observer.observe(ref.current);\n        }\n\n        return () => {\n            if (ref.current) {\n                observer.unobserve(ref.current);\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (!hasStarted) return;\n\n        const plantInterval = setInterval(() => {\n            setPlants((prev) => {\n                if (prev >= targetPlants) {\n                    clearInterval(plantInterval);\n                    return prev;\n                }\n                return prev + 1;\n            });\n        }, 50);\n\n        const treeInterval = setInterval(() => {\n            setTrees((prev) => {\n                if (prev >= targetTrees) {\n                    clearInterval(treeInterval);\n                    return prev;\n                }\n                return prev + 1;\n            });\n        }, 50);\n\n        const eventInterval = setInterval(() => {\n            setEvents((prev) => {\n                if (prev >= targetEvents) {\n                    clearInterval(eventInterval);\n                    return prev;\n                }\n                return prev + 1;\n            });\n        }, 50);\n\n        const villageInterval = setInterval(() => {\n            setVillages((prev) => {\n                if (prev >= targetVillages) {\n                    clearInterval(villageInterval);\n                    return prev;\n                }\n                return prev + 1;\n            });\n        }, 50);\n\n        return () => {\n            clearInterval(plantInterval);\n            clearInterval(treeInterval);\n            clearInterval(eventInterval);\n            clearInterval(villageInterval);\n        };\n    }, [hasStarted, targetPlants, targetTrees, targetEvents, targetVillages]);\n\n    return (\n        <div className=\"number-container\" ref={ref}>\n            <div className=\"number-container-in\">\n                <h1>Our Numbers speak for themselves</h1>\n                <div className=\"main-container\">\n                    <div className=\"main-container-in\">\n                        <p>Number of Plants Planted</p>\n                        <p>\n                            <span>{plants}</span>\n                        </p>\n                    </div>\n                </div>\n                <div className=\"group-container\">\n                    <div className=\"group-container-in\">\n                        <div className=\"group-box\">\n                            <p>Number of Trees</p>\n                            <p>\n                                <span>{trees}</span>\n                            </p>\n                        </div>\n                        <div className=\"group-box\">\n                            <p>Number of Events</p>\n                            <p>\n                                <span>{events}</span>\n                            </p>\n                        </div>\n                        <div className=\"group-box\">\n                            <p>Number of Villages</p>\n                            <p>\n                                <span>{villages}</span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Number;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}