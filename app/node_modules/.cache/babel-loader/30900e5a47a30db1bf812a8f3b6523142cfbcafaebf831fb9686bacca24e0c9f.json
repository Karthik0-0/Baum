{"ast":null,"code":"var _jsxFileName = \"/Users/dineshkorukonda/Developer/Dev/DevelopmentStage/Baum/app/src/Pages/blog/blog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './blog.css';\n// import { objectives } from './data'; // Import your data\nimport { objectives } from '../../Components/objectives/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the blog ID from the URL\n  const [blog, setBlog] = useState(null);\n  useEffect(() => {\n    // Find the blog with the matching ID\n    const foundBlog = objectives.find(obj => obj.id === parseInt(id, 10));\n    setBlog(foundBlog);\n  }, [id]);\n  if (!blog) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this); // Handle loading state or invalid ID\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: blog.image,\n      alt: blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blog.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blog.blog_data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", blog.author.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Blog, \"YJ1dWkjczm0D9AKzIxA9+msCCjc=\", false, function () {\n  return [useParams];\n});\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","useParams","objectives","jsxDEV","_jsxDEV","Blog","_s","id","blog","setBlog","foundBlog","find","obj","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","image","alt","description","blog_data","author","name","_c","$RefreshReg$"],"sources":["/Users/dineshkorukonda/Developer/Dev/DevelopmentStage/Baum/app/src/Pages/blog/blog.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './blog.css';\n// import { objectives } from './data'; // Import your data\nimport { objectives } from '../../Components/objectives/data';\n\nconst Blog = () => {\n    const { id } = useParams(); // Get the blog ID from the URL\n    const [blog, setBlog] = useState(null);\n\n    useEffect(() => {\n        // Find the blog with the matching ID\n        const foundBlog = objectives.find(obj => obj.id === parseInt(id, 10));\n        setBlog(foundBlog);\n    }, [id]);\n\n    if (!blog) {\n        return <p>Loading...</p>; // Handle loading state or invalid ID\n    }\n\n    return (\n        <div className=\"blog-container\">\n            <h1>{blog.title}</h1>\n            <img src={blog.image} alt={blog.title} />\n            <p>{blog.description}</p>\n            <p>{blog.blog_data}</p>\n            <p>Author: {blog.author.name}</p>\n        </div>\n    );\n}\n\nexport default Blog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,YAAY;AACnB;AACA,SAASC,UAAU,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,SAAS,GAAGR,UAAU,CAACS,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACL,EAAE,KAAKM,QAAQ,CAACN,EAAE,EAAE,EAAE,CAAC,CAAC;IACrEE,OAAO,CAACC,SAAS,CAAC;EACtB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,IAAI,EAAE;IACP,oBAAOJ,OAAA;MAAAU,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC9B;EAEA,oBACId,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC3BV,OAAA;MAAAU,QAAA,EAAKN,IAAI,CAACY;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBd,OAAA;MAAKiB,GAAG,EAAEb,IAAI,CAACc,KAAM;MAACC,GAAG,EAAEf,IAAI,CAACY;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCd,OAAA;MAAAU,QAAA,EAAIN,IAAI,CAACgB;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBd,OAAA;MAAAU,QAAA,EAAIN,IAAI,CAACiB;IAAS;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAAU,QAAA,GAAG,UAAQ,EAACN,IAAI,CAACkB,MAAM,CAACC,IAAI;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAvBKD,IAAI;EAAA,QACSJ,SAAS;AAAA;AAAA2B,EAAA,GADtBvB,IAAI;AAyBV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}