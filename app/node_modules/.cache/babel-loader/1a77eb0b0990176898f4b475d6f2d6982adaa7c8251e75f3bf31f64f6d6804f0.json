{"ast":null,"code":"var _jsxFileName = \"/Users/dineshkorukonda/Developer/Dev/DevelopmentStage/Baum/app/src/Components/mission/mission.jsx\",\n  _s = $RefreshSig$();\nimport TreeMission from '../../Assets/missionImage.png';\nimport React, { useRef, useState, useEffect } from 'react';\nimport './mission.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mission = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false); // Corrected variable name\n  const missionRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setIsVisible(true); // Corrected function name\n      } else {\n        setIsVisible(false); // Corrected function name\n      }\n    }, {\n      threshold: 0.1\n    });\n    if (missionRef.current) {\n      observer.observe(missionRef.current);\n    }\n    return () => {\n      if (missionRef.current) {\n        observer.unobserve(missionRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mission-container ${isVisible ? 'visible' : ''}`,\n    ref: missionRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mission-container-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mission-container-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Our Mission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Mission, \"xQIIhPynIU20wesanAxed7Y/5nw=\");\n_c = Mission;\nexport default Mission;\nvar _c;\n$RefreshReg$(_c, \"Mission\");","map":{"version":3,"names":["TreeMission","React","useRef","useState","useEffect","jsxDEV","_jsxDEV","Mission","_s","isVisible","setIsVisible","missionRef","observer","IntersectionObserver","entry","isIntersecting","threshold","current","observe","unobserve","className","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dineshkorukonda/Developer/Dev/DevelopmentStage/Baum/app/src/Components/mission/mission.jsx"],"sourcesContent":["import TreeMission from '../../Assets/missionImage.png';\nimport React, { useRef, useState, useEffect } from 'react';\nimport './mission.css';\n\nconst Mission = () => {\n    const [isVisible, setIsVisible] = useState(false); // Corrected variable name\n    const missionRef = useRef(null);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    setIsVisible(true); // Corrected function name\n                } else {\n                    setIsVisible(false); // Corrected function name\n                }\n            },\n            { threshold: 0.1 }\n        );\n\n        if (missionRef.current) {\n            observer.observe(missionRef.current);\n        }\n\n        return () => {\n            if (missionRef.current) {\n                observer.unobserve(missionRef.current);\n            }\n        };\n    }, []);\n\n    return (\n        <div className={`mission-container ${isVisible ? 'visible' : ''}`} ref={missionRef}>\n            <div className=\"mission-container-in\">\n               <div className=\"mission-container-heading\">\n                <h1>Our Mission</h1>\n               </div>\n               \n            </div>\n        </div>\n    );\n}\n\nexport default Mission;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,+BAA+B;AACvD,OAAOC,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAMQ,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/BE,SAAS,CAAC,MAAM;IACZ,MAAMQ,QAAQ,GAAG,IAAIC,oBAAoB,CACrC,CAAC,CAACC,KAAK,CAAC,KAAK;MACT,IAAIA,KAAK,CAACC,cAAc,EAAE;QACtBL,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACxB,CAAC,MAAM;QACHA,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB;IACJ,CAAC,EACD;MAAEM,SAAS,EAAE;IAAI,CACrB,CAAC;IAED,IAAIL,UAAU,CAACM,OAAO,EAAE;MACpBL,QAAQ,CAACM,OAAO,CAACP,UAAU,CAACM,OAAO,CAAC;IACxC;IAEA,OAAO,MAAM;MACT,IAAIN,UAAU,CAACM,OAAO,EAAE;QACpBL,QAAQ,CAACO,SAAS,CAACR,UAAU,CAACM,OAAO,CAAC;MAC1C;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAKc,SAAS,EAAE,qBAAqBX,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IAACY,GAAG,EAAEV,UAAW;IAAAW,QAAA,eAC/EhB,OAAA;MAAKc,SAAS,EAAC,sBAAsB;MAAAE,QAAA,eAClChB,OAAA;QAAKc,SAAS,EAAC,2BAA2B;QAAAE,QAAA,eACzChB,OAAA;UAAAgB,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAlB,EAAA,CArCKD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}